[{"path":"https://corymccartan.github.io/easycensus/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Cory McCartan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://corymccartan.github.io/easycensus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cory McCartan. Author, maintainer.","code":""},{"path":"https://corymccartan.github.io/easycensus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McCartan C (2022). easycensus: Quickly Extract Marginalize U.S. Census Tables. R package version 0.2.1, https://corymccartan.github.io/easycensus/.","code":"@Manual{,   title = {easycensus: Quickly Extract and Marginalize U.S. Census Tables},   author = {Cory McCartan},   year = {2022},   note = {R package version 0.2.1},   url = {https://corymccartan.github.io/easycensus/}, }"},{"path":"https://corymccartan.github.io/easycensus/index.html","id":"easycensus-","dir":"","previous_headings":"","what":"Quickly Extract and Marginalize U.S. Census Tables","title":"Quickly Extract and Marginalize U.S. Census Tables","text":"Extracting desired data using proper Census variable names can time-consuming. package takes pain process. use case best illustrated example. Suppose want age--race information tract level. Unfortunately, Census Bureau doesn’t publish specific age--race table. build one public-use microdata, lacks tract-level geographic information, privacy reasons. left trying find existing Census product can extract age--race information . Unless ’re Census pro, won’t know exactly top head. suppose know ’d like get data decennial census, since covers whole nation asks age race. easycensus provides find_dec_table() function help locate exactly decennial census table use get data want. can see right away best bet either table P012 table PCT012, depending whether want age 5-year groups individual years. Let’s say ’re OK five-year bins. need get data call get_dec_table(). easycensus built top great tidycensus package, usual arguments functions (including ability get shapefile information) work , . ’ve gotten labeled data, ’s easy marginalize unneeded sex variable. can either use group_by() summarize() usual, can use marginalize() function easycensus. added advantage automatically handling margins error ACS data. Finally, might want simplify age race labels, since kind verbose. easycensus provides set tidy_*() functions assist . Dive reference learn !","code":"library(easycensus)  find_dec_table(age, race) #>  #> ── Top 2 matching tables ─────────────────────────────────────────────────────── #>  #>  P012  - SEX BY AGE #> Parsed variables: #> • sex #> • age #> • race_ethnicity #> Example values: #> • female / 45 to 49 years / black or african american alone #> • female / 20 years / two or more races #> • male / 55 to 59 years / american indian and alaska native alone #>  #>  PCT012  - SEX BY AGE #> Parsed variables: #> • sex #> • age #> • race_ethnicity #> Example values: #> • female / 70 years / total #> • female / 85 years / native hawaiian and other pacific islander alone #> • female / 30 years / two or more races d_cens = get_dec_table(\"tract\", \"P012\", state=\"AK\", county=\"Nome\") print(d_cens) #> # A tibble: 9,600 × 7 #>    GEOID       NAME                    variable value sex   age   race_ethnicity #>    <chr>       <chr>                   <chr>    <dbl> <fct> <fct> <fct>          #>  1 02180000100 Census Tract 1, Nome C… P012002   3053 male  total total          #>  2 02180000200 Census Tract 2, Nome C… P012002   2005 male  total total          #>  3 02180000100 Census Tract 1, Nome C… P012003    359 male  unde… total          #>  4 02180000200 Census Tract 2, Nome C… P012003    175 male  unde… total          #>  5 02180000100 Census Tract 1, Nome C… P012004    318 male  5 to… total          #>  6 02180000200 Census Tract 2, Nome C… P012004    132 male  5 to… total          #>  7 02180000100 Census Tract 1, Nome C… P012005    294 male  10 t… total          #>  8 02180000200 Census Tract 2, Nome C… P012005    161 male  10 t… total          #>  9 02180000100 Census Tract 1, Nome C… P012006    165 male  15 t… total          #> 10 02180000200 Census Tract 2, Nome C… P012006     90 male  15 t… total          #> # … with 9,590 more rows library(dplyr)  d_cens = d_cens %>%     # Drop table margins. Can also use `drop_total=TRUE` in `get_dec_table()`     filter(age != \"total\", race_ethnicity != \"total\") %>%     marginalize(age, race=race_ethnicity) print(d_cens) #> # A tibble: 414 × 5 #> # Groups:   GEOID, NAME, age [46] #>    GEOID       NAME                                     age          race  value #>    <chr>       <chr>                                    <fct>        <fct> <dbl> #>  1 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… amer…  5240 #>  2 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… asia…    10 #>  3 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… blac…    10 #>  4 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… hisp…    30 #>  5 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… nati…     0 #>  6 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… some…     0 #>  7 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… two …   230 #>  8 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… whit…   110 #>  9 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… whit…   100 #> 10 02180000100 Census Tract 1, Nome Census Area, Alaska 15 to 17 ye… amer…  2930 #> # … with 404 more rows d_cens %>%     mutate(race = tidy_race(race),            tidy_age_bins(age)) #> # A tibble: 414 × 7 #> # Groups:   GEOID, NAME, age [46] #>    GEOID       NAME                            age   race  value age_from age_to #>    <chr>       <chr>                           <fct> <fct> <dbl>    <dbl>  <dbl> #>  1 02180000100 Census Tract 1, Nome Census Ar… 10 t… aian   5240       10     14 #>  2 02180000100 Census Tract 1, Nome Census Ar… 10 t… asian    10       10     14 #>  3 02180000100 Census Tract 1, Nome Census Ar… 10 t… black    10       10     14 #>  4 02180000100 Census Tract 1, Nome Census Ar… 10 t… hisp     30       10     14 #>  5 02180000100 Census Tract 1, Nome Census Ar… 10 t… nhpi      0       10     14 #>  6 02180000100 Census Tract 1, Nome Census Ar… 10 t… other     0       10     14 #>  7 02180000100 Census Tract 1, Nome Census Ar… 10 t… two     230       10     14 #>  8 02180000100 Census Tract 1, Nome Census Ar… 10 t… white   110       10     14 #>  9 02180000100 Census Tract 1, Nome Census Ar… 10 t… whit…   100       10     14 #> 10 02180000100 Census Tract 1, Nome Census Ar… 15 t… aian   2930       15     17 #> # … with 404 more rows"},{"path":"https://corymccartan.github.io/easycensus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Quickly Extract and Marginalize U.S. Census Tables","text":"can install released version easycensus CRAN : install development version GitHub :","code":"install.packages(\"easycensus\") # install.packages(\"devtools\") devtools::install_github(\"CoryMcCartan/easycensus\")"},{"path":"https://corymccartan.github.io/easycensus/reference/easycensus-package.html","id":null,"dir":"Reference","previous_headings":"","what":"easycensus: Quickly Extract and Marginalize U.S. Census Tables — easycensus-package","title":"easycensus: Quickly Extract and Marginalize U.S. Census Tables — easycensus-package","text":"Extracting desired data using proper Census variable names can time-consuming. package takes pain process providing functions quickly locate variables download labeled tables Census APIs (<https://www.census.gov/data/developers/data-sets.html>).","code":""},{"path":[]},{"path":"https://corymccartan.github.io/easycensus/reference/easycensus-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"easycensus: Quickly Extract and Marginalize U.S. Census Tables — easycensus-package","text":"Maintainer: Cory McCartan cmccartan@g.harvard.edu","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/find_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a decennial or ACS census table with variables of interest — find_table","title":"Find a decennial or ACS census table with variables of interest — find_table","text":"function uses fuzzy matching help identify tables census contain variables interest. Matched table codes printed , along Census-provided table description, parsed variable names, example table cells. website https://censusreporter.org/ may also useful finding variables.","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/find_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a decennial or ACS census table with variables of interest — find_table","text":"","code":"find_dec_table(..., show = 2)  find_acs_table(..., show = 4)"},{"path":"https://corymccartan.github.io/easycensus/reference/find_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a decennial or ACS census table with variables of interest — find_table","text":"... Variables look . can length-1 character vectors, , convenience, can left unquoted (see examples). show many matching tables show. Increase show possible matches, cost output. Negative values converted positive suppress printing.","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/find_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a decennial or ACS census table with variables of interest — find_table","text":"codes top show tables, invisibly.","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/find_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find a decennial or ACS census table with variables of interest — find_table","text":"","code":"find_dec_table(\"sex\", \"age\") #>  #> ── Top 2 matching tables ─────────────────────────────────────────────────────── #>  #>  P012  - SEX BY AGE #> Parsed variables: #> • sex #> • age #> • race_ethnicity #> Example values: #> • male / 67 to 69 years / black or african american alone #> • male / 25 to 29 years / two or more races #> • male / 5 to 9 years / black or african american alone #>  #>  PCT012  - SEX BY AGE #> Parsed variables: #> • sex #> • age #> • race_ethnicity #> Example values: #> • female / 16 years / two or more races #> • male / 9 years / native hawaiian and other pacific islander alone #> • female / 27 years / native hawaiian and other pacific islander alone find_dec_table(tenure, race) #>  #> ── Top 2 matching tables ─────────────────────────────────────────────────────── #>  #>  H014  - TENURE BY RACE OF HOUSEHOLDER #> Parsed variables: #> • tenure #> • race_of_householder #> Example values: #> • renter occupied / householder who is some other race alone #> • owner occupied / householder who is american indian and alaska native alone #> • renter occupied / householder who is native hawaiian and other pacific #> islander alone #>  #>  H016  - TENURE BY HOUSEHOLD SIZE #> Parsed variables: #> • tenure #> • household_size #> • race_ethnicity #> Example values: #> • renter occupied / 1-person household / total #> • renter occupied / 2-person household / black or african american alone #> householder #> • owner occupied / 5-person household / total find_acs_table(\"income\", \"sex\", show=3) #>  #> ── Top 3 matching tables ─────────────────────────────────────────────────────── #>  #>  B17008  - AGGREGATE INCOME DEFICIT (DOLLARS) IN THE PAST 12 MONTHS OF #> UNRELATED INDIVIDUALS BY SEX #> Availability: #> ✔ 5-year ACS #> ✔ 1-year ACS #> Parsed variables: #> • sex #> Example values: #> • total #> • male (dollars) #> • female (dollars) #>  #>  B19216  - AGGREGATE NONFAMILY HOUSEHOLD INCOME IN THE PAST 12 MONTHS (IN 2019 #> INFLATION-ADJUSTED DOLLARS) BY SEX OF HOUSEHOLDER BY LIVING ALONE BY AGE OF #> HOUSEHOLDER #> Availability: #> ✔ 5-year ACS #> ✔ 1-year ACS #> Parsed variables: #> • sex_of_householder #> • living_alone #> • age_of_householder #> Example values: #> • total / total / total #> • male householder (dollars) / total / total #> • female householder (dollars) / not living alone (dollars) / householder 65 #> years and over (dollars) #>  #>  B21004  - MEDIAN INCOME IN THE PAST 12 MONTHS (IN 2019 INFLATION-ADJUSTED #> DOLLARS) BY VETERAN STATUS BY SEX FOR THE CIVILIAN POPULATION 18 YEARS AND OVER #> WITH INCOME #> Availability: #> ✔ 5-year ACS #> ✔ 1-year ACS #> Parsed variables: #> • veteran_status #> • sex_for_the_civilian_population_18_years_over_with_income #> Example values: #> • veteran / male #> • nonveteran / male #> • nonveteran / female find_acs_table(\"heath care\", show=-1)"},{"path":"https://corymccartan.github.io/easycensus/reference/get_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Download data from a decennial census or ACS table — get_table","title":"Download data from a decennial census or ACS table — get_table","text":"Leverages tidycensus::get_decennial() tidycensus::get_acs() download tables census data. Tables returned tidy format, variables given tidy, human-readable names.","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/get_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download data from a decennial census or ACS table — get_table","text":"","code":"get_dec_table(   geography,   table,   state = NULL,   county = NULL,   ...,   drop_total = FALSE )  get_acs_table(   geography,   table,   year = 2019,   state = NULL,   county = NULL,   survey = c(\"acs5\", \"acs1\"),   ...,   drop_total = FALSE )"},{"path":"https://corymccartan.github.io/easycensus/reference/get_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download data from a decennial census or ACS table — get_table","text":"geography geography level download data . Usually one state, county, tract, block group, block, zcta, etc. Consult https://walker-data.com/tidycensus/articles/basic-usage.html#geography--tidycensus information. table table code download. See find_dec_table() help identifying table interest. Note: tables split /B/C/etc. versions race; function unifies tables one code. , example, use P012, P012A. state state get data , . county state get data , . ... arguments passed tidycensus::get_decennial() tidycensus::get_acs(), e.g. year, state, county, geometry. drop_total Whether filter variables totals across another variable. Recommended inspection underlying table. year ACS data, survey year get data . survey ACS data, whether use one-year five-year survey (default). Make sure check availability using find_acs_table().","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/get_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download data from a decennial census or ACS table — get_table","text":"tibble census data tidy format, columns GEOID, NAME, variable (containing Census variable code), value estiamte, moe case ACS tables, additional factor columns specific table.","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/get_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download data from a decennial census or ACS table — get_table","text":"","code":"if (FALSE) { get_dec_table(\"state\", \"P003\") get_dec_table(\"state\", \"H002\") get_dec_table(\"county\", \"H002\", state=\"WA\", drop_total=TRUE)  get_acs_table(\"county subdivision\", \"B09001\", state=\"WA\", county=\"King\") }"},{"path":"https://corymccartan.github.io/easycensus/reference/marginalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to sum over nuisance variables — marginalize","title":"Helper function to sum over nuisance variables — marginalize","text":"ACS data, margins error updated appropriately, using tidycensus::moe_sum().","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/marginalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to sum over nuisance variables — marginalize","text":"","code":"marginalize(data, ...)"},{"path":"https://corymccartan.github.io/easycensus/reference/marginalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to sum over nuisance variables — marginalize","text":"data output get_dec_table() get_acs_table() ... variables interest, kept. Remaining variables marginalized .","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/marginalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to sum over nuisance variables — marginalize","text":"new data frame group_by() summarize() applied.","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/marginalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to sum over nuisance variables — marginalize","text":"","code":"if (FALSE) { d_cens = get_acs_table(\"state\", \"B25042\") marginalize(d_cens, bedrooms) }"},{"path":"https://corymccartan.github.io/easycensus/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. tidycensus moe_product, moe_prop, moe_ratio, moe_sum","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy labels in census tables — tidiers","title":"Tidy labels in census tables — tidiers","text":"table labels quite verbose, users often want shorten . functions make tidying common types labels easy. produce straightforward output, several generic tidiers: tidy_simplify() attempts simplify labels removing words common labels. tidy_parens() attempts simplify labels removing terms parentheses.","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy labels in census tables — tidiers","text":"","code":"tidy_race(x)  tidy_ethnicity(x)  tidy_age(x)  tidy_age_bins(x, as_factor = FALSE)  tidy_income_bins(x, as_factor = FALSE)  tidy_simplify(x)  tidy_parens(x)"},{"path":"https://corymccartan.github.io/easycensus/reference/tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy labels in census tables — tidiers","text":"x factor, re-leveled. Character vectors converted factors. as_factor TRUE, return factor levels form [35,40].","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/tidiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy labels in census tables — tidiers","text":"re-leveled factor, except tidy_age_bins(), default returns data frame columns age_from age_to (inclusive).","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/tidiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy labels in census tables — tidiers","text":"","code":"ex_race_long = c(\"american indian and alaska native alone\", \"asian alone\",     \"black or african american alone\", \"hispanic or latino\",     \"native hawaiian and other pacific islander alone\",     \"some other race alone\", \"total\", \"two or more races\",     \"white alone\", \"white alone, not hispanic or latino\") tidy_race(ex_race_long) #>  [1] aian     asian    black    hisp     nhpi     other    total    two      #>  [9] white    white_nh #> Levels: aian asian black hisp nhpi other total two white white_nh  tidy_age_bins(c(\"10 to 14 years\", \"21 years\", \"85 years and over\")) #> # A tibble: 3 × 2 #>   age_from age_to #>      <dbl>  <dbl> #> 1       10     14 #> 2       21     21 #> 3       85    Inf  tidy_parens(c(\"label one (fake)\", \"label two (fake)\")) #> [1] label one label two #> Levels: label one label two tidy_simplify(c(\"label one (fake)\", \"label two (fake)\")) #> [1] one two #> Levels: one two"},{"path":"https://corymccartan.github.io/easycensus/news/index.html","id":"easycensus-031","dir":"Changelog","previous_headings":"","what":"easycensus 0.3.1","title":"easycensus 0.3.1","text":"Improve tidiers Income bin tidiers","code":""},{"path":"https://corymccartan.github.io/easycensus/news/index.html","id":"easycensus-020","dir":"Changelog","previous_headings":"","what":"easycensus 0.2.0","title":"easycensus 0.2.0","text":"CRAN resubmission","code":""},{"path":"https://corymccartan.github.io/easycensus/news/index.html","id":"easycensus-020-1","dir":"Changelog","previous_headings":"","what":"easycensus 0.2.0","title":"easycensus 0.2.0","text":"Availability information 1-year 5-year ACS Improve documentation parameter organization New tests","code":""},{"path":"https://corymccartan.github.io/easycensus/news/index.html","id":"easycensus-010","dir":"Changelog","previous_headings":"","what":"easycensus 0.1.0","title":"easycensus 0.1.0","text":"Initial release Functionality search download ACS 2010 Census tables Helper functions recoding common variables marginalizing nuisance variables","code":""}]
