[{"path":"https://corymccartan.com/easycensus/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Cory McCartan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://corymccartan.com/easycensus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cory McCartan. Author, maintainer.","code":""},{"path":"https://corymccartan.com/easycensus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McCartan C (2022). easycensus: Quickly Extract Marginalize U.S. Census Tables. R package version 1.0.0, https://corymccartan.com/easycensus/.","code":"@Manual{,   title = {easycensus: Quickly Extract and Marginalize U.S. Census Tables},   author = {Cory McCartan},   year = {2022},   note = {R package version 1.0.0},   url = {https://corymccartan.com/easycensus/}, }"},{"path":"https://corymccartan.com/easycensus/index.html","id":"easycensus-","dir":"","previous_headings":"","what":"Quickly Extract and Marginalize U.S. Census Tables","title":"Quickly Extract and Marginalize U.S. Census Tables","text":"Extracting desired data using proper Census variable names can time-consuming. package takes pain process. use case best illustrated example. Suppose want age--race information tract level. Unfortunately, Census Bureau doesn’t publish specific age--race table. build one public-use microdata, lacks tract-level geographic information, privacy reasons. left trying find existing Census product can extract age--race information . Unless ’re Census pro, won’t know exactly top head. suppose know ’d like get data decennial census, since covers whole nation asks age race. easycensus provides cens_find_dec() function help locate exactly decennial census table use get data want. can see right away best bet either table P012 table PCT012, depending whether want age 5-year groups individual years. Let’s say ’re OK five-year bins. need get data call cens_get_dec(). easycensus built top great tidycensus package, usual arguments functions (including ability get shapefile information) work , . ’ve gotten labeled data, ’s easy marginalize unneeded sex variable. can either use group_by() summarize() usual, can use cens_margin_to() function easycensus. added advantage automatically handling margins error ACS data. Finally, might want simplify age race labels, since kind verbose. easycensus provides set tidy_*() functions assist . Dive reference learn !","code":"library(easycensus)  cens_find_dec(age, race) #>  #> ── Top 2 matching tables ─────────────────────────────────────────────────────── #>  #>  P012  - SEX BY AGE #> Parsed variables: #> • sex #> • age #> • race_ethnicity #> Example values: #> • female / 45 to 49 years / black or african american alone #> • female / 20 years / two or more races #> • male / 55 to 59 years / american indian and alaska native alone #>  #>  PCT012  - SEX BY AGE #> Parsed variables: #> • sex #> • age #> • race_ethnicity #> Example values: #> • female / 70 years / total #> • female / 85 years / native hawaiian and other pacific islander alone #> • female / 30 years / two or more races d_cens = cens_get_dec(\"tract\", \"P012\", state=\"AK\", county=\"Nome\") print(d_cens) #> # A tibble: 9,600 × 7 #>    GEOID       NAME                            varia…¹ value sex   age   race_…² #>    <chr>       <chr>                           <chr>   <dbl> <fct> <fct> <fct>   #>  1 02180000100 Census Tract 1, Nome Census Ar… P012002  3053 male  total total   #>  2 02180000200 Census Tract 2, Nome Census Ar… P012002  2005 male  total total   #>  3 02180000100 Census Tract 1, Nome Census Ar… P012003   359 male  unde… total   #>  4 02180000200 Census Tract 2, Nome Census Ar… P012003   175 male  unde… total   #>  5 02180000100 Census Tract 1, Nome Census Ar… P012004   318 male  5 to… total   #>  6 02180000200 Census Tract 2, Nome Census Ar… P012004   132 male  5 to… total   #>  7 02180000100 Census Tract 1, Nome Census Ar… P012005   294 male  10 t… total   #>  8 02180000200 Census Tract 2, Nome Census Ar… P012005   161 male  10 t… total   #>  9 02180000100 Census Tract 1, Nome Census Ar… P012006   165 male  15 t… total   #> 10 02180000200 Census Tract 2, Nome Census Ar… P012006    90 male  15 t… total   #> # … with 9,590 more rows, and abbreviated variable names ¹​variable, #> #   ²​race_ethnicity #> # ℹ Use `print(n = ...)` to see more rows library(dplyr)  d_cens = d_cens %>%     # Drop table margins. Can also use `drop_total=TRUE` in `get_dec_table()`     filter(age != \"total\", race_ethnicity != \"total\") %>%     cens_margin_to(age, race=race_ethnicity) print(d_cens) #> # A tibble: 414 × 5 #>    GEOID       NAME                                     age          race  value #>    <chr>       <chr>                                    <fct>        <fct> <dbl> #>  1 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… amer…  5240 #>  2 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… asia…    10 #>  3 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… blac…    10 #>  4 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… hisp…    30 #>  5 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… nati…     0 #>  6 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… some…     0 #>  7 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… two …   230 #>  8 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… whit…   110 #>  9 02180000100 Census Tract 1, Nome Census Area, Alaska 10 to 14 ye… whit…   100 #> 10 02180000100 Census Tract 1, Nome Census Area, Alaska 15 to 17 ye… amer…  2930 #> # … with 404 more rows #> # ℹ Use `print(n = ...)` to see more rows d_cens %>%     mutate(race = tidy_race(race),            tidy_age_bins(age)) #> # A tibble: 414 × 7 #>    GEOID       NAME                             age   race  value age_f…¹ age_to #>    <chr>       <chr>                            <fct> <fct> <dbl>   <dbl>  <dbl> #>  1 02180000100 Census Tract 1, Nome Census Are… 10 t… aian   5240      10     14 #>  2 02180000100 Census Tract 1, Nome Census Are… 10 t… asian    10      10     14 #>  3 02180000100 Census Tract 1, Nome Census Are… 10 t… black    10      10     14 #>  4 02180000100 Census Tract 1, Nome Census Are… 10 t… hisp     30      10     14 #>  5 02180000100 Census Tract 1, Nome Census Are… 10 t… nhpi      0      10     14 #>  6 02180000100 Census Tract 1, Nome Census Are… 10 t… other     0      10     14 #>  7 02180000100 Census Tract 1, Nome Census Are… 10 t… two     230      10     14 #>  8 02180000100 Census Tract 1, Nome Census Are… 10 t… white   110      10     14 #>  9 02180000100 Census Tract 1, Nome Census Are… 10 t… whit…   100      10     14 #> 10 02180000100 Census Tract 1, Nome Census Are… 15 t… aian   2930      15     17 #> # … with 404 more rows, and abbreviated variable name ¹​age_from #> # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://corymccartan.com/easycensus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Quickly Extract and Marginalize U.S. Census Tables","text":"can install released version easycensus CRAN : install development version GitHub :","code":"install.packages(\"easycensus\") # install.packages(\"devtools\") devtools::install_github(\"CoryMcCartan/easycensus\")"},{"path":"https://corymccartan.com/easycensus/reference/cens_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Authorize use of the Census API — cens_auth","title":"Authorize use of the Census API — cens_auth","text":"Tries environment variables CENSUS_API_KEY CENSUS_KEY, order. none found R used interactive mode, prompt user key.","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authorize use of the Census API — cens_auth","text":"","code":"cens_auth()"},{"path":"https://corymccartan.com/easycensus/reference/cens_auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authorize use of the Census API — cens_auth","text":"Census API key","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_find.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a decennial or ACS census table with variables of interest — cens_find","title":"Find a decennial or ACS census table with variables of interest — cens_find","text":"function uses fuzzy matching help identify tables census contain variables interest. Matched table codes printed , along Census-provided table description, parsed variable names, example table cells. website https://censusreporter.org/ may also useful finding variables.","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a decennial or ACS census table with variables of interest — cens_find","text":"","code":"cens_find_dec(..., show = 2)  cens_find_acs(..., show = 4)"},{"path":"https://corymccartan.com/easycensus/reference/cens_find.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a decennial or ACS census table with variables of interest — cens_find","text":"... Variables look . can length-1 character vectors, , convenience, can left unquoted (see examples). show many matching tables show. Increase show possible matches, cost output. Negative values converted positive suppress printing.","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_find.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a decennial or ACS census table with variables of interest — cens_find","text":"codes top show tables, invisibly.","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_find.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find a decennial or ACS census table with variables of interest — cens_find","text":"","code":"cens_find_dec(\"sex\", \"age\") #> Error in match_tables(variables, tables_sf1): object 'tables_sf1' not found cens_find_dec(tenure, race) #> Error in match_tables(variables, tables_sf1): object 'tables_sf1' not found cens_find_acs(\"income\", \"sex\", show=3) #> Error in match_tables(variables, tables_acs, complex_pen = 0.1): object 'tables_acs' not found cens_find_acs(\"heath care\", show=-1) #> Error in match_tables(variables, tables_acs, complex_pen = 0.1): object 'tables_acs' not found"},{"path":"https://corymccartan.com/easycensus/reference/cens_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Download data from a decennial census or ACS table — cens_get","title":"Download data from a decennial census or ACS table — cens_get","text":"Leverages tidycensus::get_decennial() tidycensus::get_acs() download tables census data. Tables returned tidy format, variables given tidy, human-readable names.","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download data from a decennial census or ACS table — cens_get","text":"","code":"cens_get_dec(   geography,   table,   state = NULL,   county = NULL,   ...,   drop_total = FALSE )  cens_get_acs(   geography,   table,   year = 2019,   state = NULL,   county = NULL,   survey = c(\"acs5\", \"acs1\"),   ...,   drop_total = FALSE )"},{"path":"https://corymccartan.com/easycensus/reference/cens_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download data from a decennial census or ACS table — cens_get","text":"geography geography level download data . Usually one state, county, tract, block group, block, zcta, etc. Consult https://walker-data.com/tidycensus/articles/basic-usage.html#geography--tidycensus information. table table code download. See cens_find_dec() help identifying table interest. Note: tables split /B/C/etc. versions race; function unifies tables one code. , example, use P012, P012A. state state get data , . county state get data , . ... arguments passed tidycensus::get_decennial() tidycensus::get_acs(), e.g. year, state, county, geometry. drop_total Whether filter variables totals across another variable. Recommended inspection underlying table. year ACS data, survey year get data . survey ACS data, whether use one-year five-year survey (default). Make sure check availability using cens_find_acs().","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download data from a decennial census or ACS table — cens_get","text":"tibble census data tidy format, columns GEOID, NAME, variable (containing Census variable code), value estiamte, moe case ACS tables, additional factor columns specific table.","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download data from a decennial census or ACS table — cens_get","text":"","code":"if (FALSE) { cens_get_dec(\"state\", \"P003\") cens_get_dec(\"state\", \"H002\") cens_get_dec(\"county\", \"H002\", state=\"WA\", drop_total=TRUE)  cens_get_acs(\"county subdivision\", \"B09001\", state=\"WA\", county=\"King\") }"},{"path":"https://corymccartan.com/easycensus/reference/cens_margin_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to sum over nuisance variables — cens_margin_to","title":"Helper function to sum over nuisance variables — cens_margin_to","text":"ACS data, margins error updated appropriately, using functionality estimate().","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_margin_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to sum over nuisance variables — cens_margin_to","text":"","code":"cens_margin_to(data, ...)"},{"path":"https://corymccartan.com/easycensus/reference/cens_margin_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to sum over nuisance variables — cens_margin_to","text":"data output cens_get_dec() cens_get_acs() ... variables interest, kept. Remaining variables marginalized .","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_margin_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to sum over nuisance variables — cens_margin_to","text":"new data frame group_by() summarize() applied.","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_margin_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to sum over nuisance variables — cens_margin_to","text":"","code":"if (FALSE) { d_cens = cens_get_acs(\"state\", \"B25042\") cens_margin_to(d_cens, bedrooms) }"},{"path":"https://corymccartan.com/easycensus/reference/cens_parse_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Attempt to Parse Tables from a Census API — cens_parse_tables","title":"Attempt to Parse Tables from a Census API — cens_parse_tables","text":"Uses parsing code generates tables_sf1 tables_acs See https://www.census.gov/data/developers/data-sets.html list APIs corresponding years, use censusapi::listCensusApis().","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_parse_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attempt to Parse Tables from a Census API — cens_parse_tables","text":"","code":"cens_parse_tables(api, year)"},{"path":"https://corymccartan.com/easycensus/reference/cens_parse_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attempt to Parse Tables from a Census API — cens_parse_tables","text":"api Census API programmatic name \"acs/acs5\". year year data","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_parse_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attempt to Parse Tables from a Census API — cens_parse_tables","text":"list cens_table objects, just lists four elements: concept, human-readable name tables, constituent table codes surveys, supported surveys dims, parsed names dimensions tables vars, tibble parsed variable values","code":""},{"path":"https://corymccartan.com/easycensus/reference/cens_parse_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attempt to Parse Tables from a Census API — cens_parse_tables","text":"","code":"if (FALSE) { cens_parse_tables(\"dec/pl\", 2020) }"},{"path":"https://corymccartan.com/easycensus/reference/easycensus-package.html","id":null,"dir":"Reference","previous_headings":"","what":"easycensus: Quickly Extract and Marginalize U.S. Census Tables — easycensus-package","title":"easycensus: Quickly Extract and Marginalize U.S. Census Tables — easycensus-package","text":"Extracting desired data using proper Census variable names can time-consuming. package takes pain process providing functions quickly locate variables download labeled tables Census APIs (https://www.census.gov/data/developers/data-sets.html).","code":""},{"path":[]},{"path":"https://corymccartan.com/easycensus/reference/easycensus-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"easycensus: Quickly Extract and Marginalize U.S. Census Tables — easycensus-package","text":"Maintainer: Cory McCartan cmccartan@g.harvard.edu","code":""},{"path":"https://corymccartan.com/easycensus/reference/est_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract estimates, standard errors, and margins of error — get_est","title":"Extract estimates, standard errors, and margins of error — get_est","text":"Getter functions estimate() vectors. posterior::rvar class may useful handling standard errors complicated mathematical expressions. function assumes Normal distribution centered estimate, standard deviation equal standard error estimate. posterior package required function.","code":""},{"path":"https://corymccartan.com/easycensus/reference/est_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract estimates, standard errors, and margins of error — get_est","text":"","code":"get_est(x)  get_se(x)  get_moe(x, conf = 0.9)  to_rvar(x, n = 500)"},{"path":"https://corymccartan.com/easycensus/reference/est_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract estimates, standard errors, and margins of error — get_est","text":"x estimate vector. conf confidence level use constructing margin error. n many samples draw.","code":""},{"path":"https://corymccartan.com/easycensus/reference/est_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract estimates, standard errors, and margins of error — get_est","text":"estimate vector. posterior::rvar vector.","code":""},{"path":"https://corymccartan.com/easycensus/reference/est_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract estimates, standard errors, and margins of error — get_est","text":"","code":"x = estimate(1, 0.1) get_est(x) #> [1] 1 get_moe(x) #> [1] 0.1644854  x = estimate(1, 0.1) if (requireNamespace(\"posterior\", quietly=TRUE)) {     rv_x = to_rvar(x)     (rv_x^2 / rv_x) - rv_x # std. errors zero (correct)     x^2 / x - x # std. errors not zero } #> <estimate[1]> #> [1] 0 ± 0.4"},{"path":"https://corymccartan.com/easycensus/reference/est_special.html","id":null,"dir":"Reference","previous_headings":"","what":"Specialized margin-of-error calculations — est_prop","title":"Specialized margin-of-error calculations — est_prop","text":"Proportions percent-change--time calculations require different standard error calculations.","code":""},{"path":"https://corymccartan.com/easycensus/reference/est_special.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specialized margin-of-error calculations — est_prop","text":"","code":"est_prop(x, y)  est_pct_chg(x, y)"},{"path":"https://corymccartan.com/easycensus/reference/est_special.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specialized margin-of-error calculations — est_prop","text":"x, y estimate vector. est_pct_chg(), calculates % change x y (.e., \\((y-x)/x\\))","code":""},{"path":"https://corymccartan.com/easycensus/reference/est_special.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specialized margin-of-error calculations — est_prop","text":"estimate vector.","code":""},{"path":"https://corymccartan.com/easycensus/reference/est_special.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specialized margin-of-error calculations — est_prop","text":"","code":"x = estimate(1, 0.1) y = estimate(1.5, 0.1) est_prop(x, y) #> <estimate[1]> #> [1] 0.67 ± 0.12 est_pct_chg(x, y) #> <estimate[1]> #> [1] 0.5 ± 0.3"},{"path":"https://corymccartan.com/easycensus/reference/estimate-vctrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal vctrs methods — estimate-vctrs","title":"Internal vctrs methods — estimate-vctrs","text":"Internal vctrs methods","code":""},{"path":"https://corymccartan.com/easycensus/reference/estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate class — estimate","title":"Estimate class — estimate","text":"numeric vector stores margin--error information along . margin error update basic arithmetic operations, using first-order Taylor series approximation. implicit assumption errors value uncorrelated. fact correlation, margins error wildly - -estimated.","code":""},{"path":"https://corymccartan.com/easycensus/reference/estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate class — estimate","text":"","code":"estimate(x, se = NULL, moe = NULL, conf = 0.9)  is_estimate(x)  as_estimate(x)"},{"path":"https://corymccartan.com/easycensus/reference/estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate class — estimate","text":"x numeric vector containing estimate(s). se numeric vector containing standard error(s) estimate(s). Users supply either se moe conf. moe numeric vector containing margin(s) error. Users supply either se moe conf. conf confidence level use converting margin error standard error. Defaults 90%, Census Bureau uses ACS estimates.","code":""},{"path":"https://corymccartan.com/easycensus/reference/estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate class — estimate","text":"estimate vector.","code":""},{"path":"https://corymccartan.com/easycensus/reference/estimate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate class — estimate","text":"","code":"estimate(5, 2) # 5 plus-or-minus 2 #> <estimate[1]> #> [1] 5 ± 3.3"},{"path":"https://corymccartan.com/easycensus/reference/format.estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Format an estimate — format.estimate","title":"Format an estimate — format.estimate","text":"Format estimate pretty printing","code":""},{"path":"https://corymccartan.com/easycensus/reference/format.estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format an estimate — format.estimate","text":"","code":"# S3 method for estimate format(x, conf = 0.9, digits = 2, trim = FALSE, ..., formatter = fmt_plain)"},{"path":"https://corymccartan.com/easycensus/reference/format.estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format an estimate — format.estimate","text":"x estimate vector conf confidence level use converting margin error standard error. Defaults 90%, Census Bureau uses ACS estimates. digits number dig trim logical; FALSE, logical, numeric complex values right-justified common width: TRUE leading blanks justification suppressed. ... Ignored. formatter formatting function use internally","code":""},{"path":"https://corymccartan.com/easycensus/reference/tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Parsed Census SF1 and ACS Tables — tables","title":"Parsed Census SF1 and ACS Tables — tables","text":"Contains parsed table information 2010 Decennial Summary File 1 2019 ACS 5-year 1-year tables. parsed information used internally cens_find_dec(), cens_find_acs(), cens_get_dec(), cens_get_acs(). sets tables, try using cens_parse_tables().","code":""},{"path":"https://corymccartan.com/easycensus/reference/tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parsed Census SF1 and ACS Tables — tables","text":"","code":"tables_sf1  tables_acs"},{"path":"https://corymccartan.com/easycensus/reference/tables.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Parsed Census SF1 and ACS Tables — tables","text":"list cens_table objects, just lists four elements: concept, human-readable name tables, constituent table codes surveys, supported surveys dims, parsed names dimensions tables vars, tibble parsed variable values object class list length 83. object class list length 848.","code":""},{"path":"https://corymccartan.com/easycensus/reference/tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy labels in census tables — tidiers","title":"Tidy labels in census tables — tidiers","text":"table labels quite verbose, users often want shorten . functions make tidying common types labels easy. produce straightforward output, several generic tidiers: tidy_simplify() attempts simplify labels removing words common labels. tidy_parens() attempts simplify labels removing terms parentheses.","code":""},{"path":"https://corymccartan.com/easycensus/reference/tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy labels in census tables — tidiers","text":"","code":"tidy_race(x)  tidy_ethnicity(x)  tidy_age(x)  tidy_age_bins(x, as_factor = FALSE)  tidy_income_bins(x, as_factor = FALSE)  tidy_simplify(x)  tidy_parens(x)"},{"path":"https://corymccartan.com/easycensus/reference/tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy labels in census tables — tidiers","text":"x factor, re-leveled. Character vectors converted factors. as_factor TRUE, return factor levels form [35,40].","code":""},{"path":"https://corymccartan.com/easycensus/reference/tidiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy labels in census tables — tidiers","text":"re-leveled factor, except tidy_age_bins(), default returns data frame columns age_from age_to (inclusive).","code":""},{"path":"https://corymccartan.com/easycensus/reference/tidiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy labels in census tables — tidiers","text":"","code":"ex_race_long = c(\"american indian and alaska native alone\", \"asian alone\",     \"black or african american alone\", \"hispanic or latino\",     \"native hawaiian and other pacific islander alone\",     \"some other race alone\", \"total\", \"two or more races\",     \"white alone\", \"white alone, not hispanic or latino\") tidy_race(ex_race_long) #>  [1] aian     asian    black    hisp     nhpi     other    total    two      #>  [9] white    white_nh #> Levels: aian asian black hisp nhpi other total two white white_nh  tidy_age_bins(c(\"10 to 14 years\", \"21 years\", \"85 years and over\")) #> # A tibble: 3 × 2 #>   age_from age_to #>      <dbl>  <dbl> #> 1       10     14 #> 2       21     21 #> 3       85    Inf  tidy_parens(c(\"label one (fake)\", \"label two (fake)\")) #> [1] label one label two #> Levels: label one label two tidy_simplify(c(\"label one (fake)\", \"label two (fake)\")) #> [1] one two #> Levels: one two"},{"path":"https://corymccartan.com/easycensus/news/index.html","id":"easycensus-100","dir":"Changelog","previous_headings":"","what":"easycensus 1.0.0","title":"easycensus 1.0.0","text":"Core functions renamed consistent cens_ prefix Use censusapi instead tidycensus fewer dependencies New estimate vector type tracks uncertainty mathematical operations Expose parsed tables users new cens_table type Improve tidiers, including income bin tidiers","code":""},{"path":"https://corymccartan.com/easycensus/news/index.html","id":"easycensus-020","dir":"Changelog","previous_headings":"","what":"easycensus 0.2.0","title":"easycensus 0.2.0","text":"CRAN resubmission","code":""},{"path":"https://corymccartan.com/easycensus/news/index.html","id":"easycensus-020-1","dir":"Changelog","previous_headings":"","what":"easycensus 0.2.0","title":"easycensus 0.2.0","text":"Availability information 1-year 5-year ACS Improve documentation parameter organization New tests","code":""},{"path":"https://corymccartan.com/easycensus/news/index.html","id":"easycensus-010","dir":"Changelog","previous_headings":"","what":"easycensus 0.1.0","title":"easycensus 0.1.0","text":"Initial release Functionality search download ACS 2010 Census tables Helper functions recoding common variables marginalizing nuisance variables","code":""}]
