[{"path":"https://corymccartan.github.io/easycensus/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Cory McCartan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://corymccartan.github.io/easycensus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cory McCartan. Author, maintainer.","code":""},{"path":"https://corymccartan.github.io/easycensus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McCartan C (2022). easycensus: Quickly Extract Marginalize U.S. Census Tables. R package version 0.0.0.9000, https://corymccartan.github.io/easycensus/.","code":"@Manual{,   title = {easycensus: Quickly Extract and Marginalize U.S. Census Tables},   author = {Cory McCartan},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://corymccartan.github.io/easycensus/}, }"},{"path":"https://corymccartan.github.io/easycensus/index.html","id":"easycensus","dir":"","previous_headings":"","what":"Quickly Extract and Marginalize U.S. Census Tables","title":"Quickly Extract and Marginalize U.S. Census Tables","text":"Extracting desired data using proper Census variable names can time-consuming. package takes pain process. use case best illustrated example. Suppose want age--race information tract level. Unfortunately, Census Bureau doesn’t publish specific age--race table. build one public-use microdata, lacks tract-level geographic information, privacy reasons. left trying find existing Census product can extract age--race information . Unless ’re Census pro, won’t know exactly top head. suppose know ’d like get data decennial census, since covers whole nation asks age race. easycensus provides find_dec_table() function help locate exactly decennial census table use get data want. can see right away best bet either table P012 table PCT012, depending whether want age 5-year groups individual years. Let’s say ’re OK five-year bins. need get data call get_dec_table(). easycensus built top great tidycensus package, usual arguments functions (including ability get shapefile information) work , . ’ve gotten labelled data, ’s easy marginalize unneeded sex variable.","code":"library(easycensus)  find_dec_table(age, race) #>  #> ── Top 2 matching tables ── #>  #>  P012  - SEX BY AGE #> Parsed variables: #> • sex #> • age #> • race_ethnicity #> Example values: #> • female / 5 to 9 years / total #> • female / 20 years / white alone, not hispanic or latino #> • male / total / white alone #>  PCT012  - SEX BY AGE #> Parsed variables: #> • sex #> • age #> • race_ethnicity #> Example values: #> • female / 50 years / two or more races #> • male / 110 years and over / black or african american alone #> • female / 69 years / native hawaiian and other pacific islander alone, not #> hispanic or latino d_cens = get_dec_table(\"tract\", \"P012\", state=\"AK\", county=\"Nome\") print(d_cens) #> # A tibble: 9,600 × 7 #>    GEOID       NAME                    variable value sex   age   race_ethnicity #>    <chr>       <chr>                   <chr>    <dbl> <fct> <fct> <fct>          #>  1 02180000100 Census Tract 1, Nome C… P012002   3053 male  total total          #>  2 02180000200 Census Tract 2, Nome C… P012002   2005 male  total total          #>  3 02180000100 Census Tract 1, Nome C… P012003    359 male  unde… total          #>  4 02180000200 Census Tract 2, Nome C… P012003    175 male  unde… total          #>  5 02180000100 Census Tract 1, Nome C… P012004    318 male  5 to… total          #>  6 02180000200 Census Tract 2, Nome C… P012004    132 male  5 to… total          #>  7 02180000100 Census Tract 1, Nome C… P012005    294 male  10 t… total          #>  8 02180000200 Census Tract 2, Nome C… P012005    161 male  10 t… total          #>  9 02180000100 Census Tract 1, Nome C… P012006    165 male  15 t… total          #> 10 02180000200 Census Tract 2, Nome C… P012006     90 male  15 t… total          #> # … with 9,590 more rows library(dplyr)  d_cens %>%     # drop table margins     # can also use `drop_total=TRUE` in `get_dec_table()`     filter(age != \"total\", race_ethnicity != \"total\") %>%     group_by(GEOID, age, race_ethnicity) %>%     summarize(value = sum(value)) #> # A tibble: 414 × 4 #> # Groups:   GEOID, age [46] #>    GEOID       age            race_ethnicity                               value #>    <chr>       <fct>          <fct>                                        <dbl> #>  1 02180000100 10 to 14 years american indian and alaska native alone       5240 #>  2 02180000100 10 to 14 years asian alone                                     10 #>  3 02180000100 10 to 14 years black or african american alone                 10 #>  4 02180000100 10 to 14 years hispanic or latino                              30 #>  5 02180000100 10 to 14 years native hawaiian and other pacific islander …     0 #>  6 02180000100 10 to 14 years some other race alone                            0 #>  7 02180000100 10 to 14 years two or more races                              230 #>  8 02180000100 10 to 14 years white alone                                    110 #>  9 02180000100 10 to 14 years white alone, not hispanic or latino            100 #> 10 02180000100 15 to 17 years american indian and alaska native alone       2930 #> # … with 404 more rows"},{"path":"https://corymccartan.github.io/easycensus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Quickly Extract and Marginalize U.S. Census Tables","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"CoryMcCartan/easycensus\")"},{"path":"https://corymccartan.github.io/easycensus/reference/easycensus-package.html","id":null,"dir":"Reference","previous_headings":"","what":"easycensus: Quickly Extract and Marginalize U.S. Census Tables — easycensus-package","title":"easycensus: Quickly Extract and Marginalize U.S. Census Tables — easycensus-package","text":"Extracting desired data using proper Census variable names can time-consuming. package takes pain process.","code":""},{"path":[]},{"path":"https://corymccartan.github.io/easycensus/reference/easycensus-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"easycensus: Quickly Extract and Marginalize U.S. Census Tables — easycensus-package","text":"Maintainer: Cory McCartan cmccartan@g.harvard.edu","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/find_dec_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a decennial census table with variables of interest — find_dec_table","title":"Find a decennial census table with variables of interest — find_dec_table","text":"function uses fuzzy matching help identify SF1 tables census contain variables interest. Matched table codes printed , along Census-provided table description, parsed variable names, example table cells.","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/find_dec_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a decennial census table with variables of interest — find_dec_table","text":"","code":"find_dec_table(..., show = 2)"},{"path":"https://corymccartan.github.io/easycensus/reference/find_dec_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a decennial census table with variables of interest — find_dec_table","text":"... Variables look . can length-1 character vectors, , convenience, can left unquoted (see examples). show many matching tables show. Increase show possible matches, cost output.","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/find_dec_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a decennial census table with variables of interest — find_dec_table","text":"codes top show tables, invisibly.","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/find_dec_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find a decennial census table with variables of interest — find_dec_table","text":"","code":"find_dec_table(\"sex\", \"age\") #> Error in lapply(tables_sf1, function(tbl) {    paste(tbl$concept, paste(str_to_upper(tbl$dims), collapse = \" \"))}): object 'tables_sf1' not found find_dec_table(tenure, race, show=1) #> Error in lapply(tables_sf1, function(tbl) {    paste(tbl$concept, paste(str_to_upper(tbl$dims), collapse = \" \"))}): object 'tables_sf1' not found"},{"path":"https://corymccartan.github.io/easycensus/reference/get_dec_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Download data from a decennial census table — get_dec_table","title":"Download data from a decennial census table — get_dec_table","text":"Download data decennial census table","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/get_dec_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download data from a decennial census table — get_dec_table","text":"","code":"get_dec_table(geography, table, ..., drop_total = FALSE)"},{"path":"https://corymccartan.github.io/easycensus/reference/get_dec_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download data from a decennial census table — get_dec_table","text":"geography geography level download data . Usually one state, county, tract, block group, block, zcta, etc. table table code download. See find_dec_table() help identifying table interest. Note: tables split /B/C/etc. versions race; function unifies tables one code. , example, use P012, P012A. ... Arguments passed tidycensus::get_decennial(), e.g. year, state, county, geometry. drop_total Whether filter variables totals across another variable. Recommended inspection underlying table.","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/get_dec_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download data from a decennial census table — get_dec_table","text":"tibble decennial Census data tidy format, columns GEOID, NAME, variable (containing Census variable code), value, additional factor columns specific table.","code":""},{"path":"https://corymccartan.github.io/easycensus/reference/get_dec_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download data from a decennial census table — get_dec_table","text":"","code":"if (FALSE) { get_dec_table(\"state\", \"P003\") get_dec_table(\"state\", \"H002\") get_dec_table(\"state\", \"H002\", drop_total=TRUE) }"}]
